security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
      App\Entity\User:
        algorithm: bcrypt
    providers:
        our_db_provider:
          entity:
            class: App\Entity\User
            property: username
        steam_user_provider:
          id: Knojector\SteamAuthenticationBundle\Security\User\SteamUserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: our_db_provider
            form_login:
              login_path: login
              check_path: login
            logout:
              path:   /logout
              target: /
        steam_log:
          anonymous: true
          provider: steam_user_provider
          steam: true
          form_login:
            login_path: login
            check_path: login
          logout:
            path:   /logout
            target: /


            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

       - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       - { path: ^/register, roles: IS_AUTHENTICATED_ANONYMOUSLY }
       - { path: ^/, roles: ROLE_USER }

    role_hierarchy:
      ROLE_ADMIN:       ROLE_USER
      ROLE_SUPERADMIN: [ROLE_ADMIN, ROLE_MODERATOR]